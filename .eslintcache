[{"E:\\works\\reactshow\\src\\slidingpuzzle\\Logic.js":"1","E:\\works\\reactshow\\src\\slidingpuzzle\\components\\SlidingPuzzle.js":"2","E:\\works\\reactshow\\src\\slidingpuzzle\\App.js":"3","E:\\works\\reactshow\\src\\slidingpuzzle\\components\\Tile.js":"4","E:\\works\\reactshow\\src\\index.js":"5"},{"size":4231,"mtime":1608884442701,"results":"6","hashOfConfig":"7"},{"size":2848,"mtime":1608884442701,"results":"8","hashOfConfig":"7"},{"size":1395,"mtime":1608455252581,"results":"9","hashOfConfig":"7"},{"size":2357,"mtime":1608924663207,"results":"10","hashOfConfig":"7"},{"size":560,"mtime":1606377734709,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qmlft4",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\works\\reactshow\\src\\slidingpuzzle\\Logic.js",[],"E:\\works\\reactshow\\src\\slidingpuzzle\\components\\SlidingPuzzle.js",[],"E:\\works\\reactshow\\src\\slidingpuzzle\\App.js",["24","25","26"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport SlidingPuzzle from './components/SlidingPuzzle'\r\n// import * as Logic from './Logic'\r\nimport './App.css'\r\nimport './components/SlidingPuzzle.css'\r\n\r\n\r\nconst App = () => {\r\n  // create number series of a 4x4 sliding puzzle by default\r\n  // const [series, setSeries] = useState(Logic.newPuzzle(N))\r\n  // const n = useRef(N)\r\n  // const isSolved = useRef(false)\r\n  // const indexBlank = useRef(Logic.findIndexBlank(series))  // caching\r\n\r\n  // const [n, setN] = useState(N)\r\n  // const [indexBlank, setIndexBlank] = useState(/* Logic.findIndexBlank(series) */)\r\n\r\n  /* useEffect(() => {\r\n    setSeries(Logic.newPuzzle(n))\r\n  }, [n]) */\r\n\r\n\r\n/*   useEffect(() => {\r\n    console.log('App useEffect');\r\n  }) */\r\n\r\n/*   const easy = (N) => {\r\n    n.current = N\r\n    setSeries(Logic.easyPuzzle())\r\n  }\r\n\r\n  const newPuzzle = (N) => {\r\n    n.current = N\r\n    setSeries(Logic.newPuzzle(N))\r\n  }\r\n */\r\n  return (\r\n    <div className=\"App\">\r\n      <SlidingPuzzle />\r\n      {/* <div style={{width: 400, margin: 'auto'}}>\r\n        <button onClick={() => {newPuzzle(3)}}>3 x 3</button>\r\n        <button onClick={() => {newPuzzle(4)}}>4 x 4</button>\r\n        <button onClick={() => {newPuzzle(5)}}>5 x 5</button>\r\n        <br/>\r\n        <button onClick={() => {easy(3)}}>easy</button>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n",["27","28"],"E:\\works\\reactshow\\src\\slidingpuzzle\\components\\Tile.js",["29"],"E:\\works\\reactshow\\src\\index.js",[],{"ruleId":"30","severity":1,"message":"31","line":1,"column":16,"nodeType":"32","messageId":"33","endLine":1,"endColumn":24},{"ruleId":"30","severity":1,"message":"34","line":1,"column":26,"nodeType":"32","messageId":"33","endLine":1,"endColumn":35},{"ruleId":"30","severity":1,"message":"35","line":1,"column":37,"nodeType":"32","messageId":"33","endLine":1,"endColumn":43},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":16,"nodeType":"32","messageId":"33","endLine":1,"endColumn":24},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-global-assign","no-unsafe-negation"]